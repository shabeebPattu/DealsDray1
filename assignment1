import org.apache.commons.io.FileUtils;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import java.io.File;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

	public class eg {
		static
		{
			System.setProperty("webdriver.chrome.driver", "./driver/chromedriver.exe");
			System.setProperty("webdriver.gecko.driver", "./driver/geckodriver.exe");
		}
		    public static void main(String[] args) throws IOException, InterruptedException {
		        WebDriver[] drivers = {new ChromeDriver(),new FirefoxDriver()};
		        LocalDateTime now = LocalDateTime.now();
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd_HH-mm-ss");
                String formattedNow = now.format(formatter);
		        int[][] resolutions = {
		            {1920, 1080},
		            {1366, 768},
		            {1536, 864}
		        };
		        for (WebDriver driver : drivers) {
		            driver.get("https://www.getcalley.com/page-sitemap.xml");
		            String browserName = driver instanceof ChromeDriver ? "chrome" : "firefox";

		            for (int[] resolution : resolutions) 
		            {
		                driver.findElement(By.linkText("https://www.getcalley.com/")).click();
		                driver.manage().window().setSize(new Dimension(resolution[0], resolution[1]));
		                File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		                File dest = new File("./data/" + browserName + "_" + resolution[0] + "×" + resolution[1] + formattedNow+"1"+".png");
		                FileUtils.copyFile(src, dest);
		                driver.navigate().back();
		            }
		            Thread.sleep(3000);
		            
		            for (int[] resolution : resolutions)
		            {
		                driver.get("https://www.getcalley.com/calley-lifetime-offer/");
		                driver.manage().window().setSize(new Dimension(resolution[0], resolution[1]));
		                File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		                File dest = new File("./data/" + browserName + "_" + resolution[0] + "×" + resolution[1] + formattedNow+"2"+".png");
		                FileUtils.copyFile(src, dest);
		            }
		            Thread.sleep(3000);
		            
		            for (int[] resolution : resolutions) {
		                driver.get("https://www.getcalley.com/see-a-demo/");
		                driver.manage().window().setSize(new Dimension(resolution[0], resolution[1]));
		                File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		                File dest = new File("./data/" + browserName + "_" + resolution[0] + "×" + resolution[1] + formattedNow+"3"+".png");
		                FileUtils.copyFile(src, dest);
		            }
		            Thread.sleep(3000);
		            
		            for (int[] resolution : resolutions) {
		                driver.get("https://www.getcalley.com/calley-teams-features/");
		                driver.manage().window().setSize(new Dimension(resolution[0], resolution[1]));
		                File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		                File dest = new File("./data/" + browserName + "_" + resolution[0] + "×" + resolution[1] + formattedNow+"4"+".png");
		                FileUtils.copyFile(src, dest);
		            }
		            Thread.sleep(3000);
		            
		            for (int[] resolution : resolutions) {
		                driver.get("https://www.getcalley.com/calley-pro-features/");
		                driver.manage().window().setSize(new Dimension(resolution[0], resolution[1]));
		                File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
		                File dest = new File("./data/" + browserName + "_" + resolution[0] + "×" + resolution[1] + formattedNow+"5"+".png");
		                FileUtils.copyFile(src, dest);  
		            }

		            driver.quit();
		        }
      
	    }
	}



